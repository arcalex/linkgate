---

- name: Upgrade all
  hosts: all
  become: true
  tasks:

    - name: Run the equivalent of "apt-get update" as a separate step
      apt:
        update_cache: yes

    - name: Upgrade the OS (apt-get dist-upgrade)
      apt:
        upgrade: full

    - name: Remove dependencies that are no longer required
      apt:
        autoremove: yes

- name: Set up serv hosts
  hosts: serv
  become: true
  tasks:

    - name: Install tomcat9
      package:
        name: tomcat9
        state: present

    - name: Copy files (tomcat9)
      copy:
        src: "{{ item }}"
        dest: "/etc/tomcat9/{{ item }}"
      with_items:
        - server.xml
        - certs/bibalex.key
        - certs/bibalex.pem

    - name: Set staff sudoers rules
      copy:
        src: sudoers.serv
        mode: "440"
        dest: /etc/sudoers.d/serv

- name: Set up data hosts
  hosts: data
  become: true
  vars:
    arangodb3_version: "{{ lookup('file', 'arangodb3.version') }}"
    neo4j_version: "{{ lookup('file', 'neo4j.version') }}"
    wdirs:
      - /srv/link-data/neo4j  # certificates/, data/, logs/, run/
      - /srv/link-data/arangodb3
  tasks:

    - name: Install Java
      package:
        name: default-jdk
        state: present

    - name: Make directory (/srv/link-data)
      file:
        path: "/srv/link-data"
        state: directory

    - name: Deploy arangodb3
      unarchive:
        src: "arangodb3-linux-{{ arangodb3_version }}.tar.gz"
        dest: "/srv/link-data"
        owner: root
        group: root

    - name: Link to deployed version (arangodb3)
      file:
        src: "arangodb3-linux-{{ arangodb3_version }}"
        dest: "/srv/link-data/arangodb3"
        state: link

    - name: Copy files (systemd)
      copy:
        src: "{{ item }}"
        dest: "/etc/systemd/system/{{ item }}"
      with_items:
        - arangod.service
        - arangod-agent.service
        - arangod-coordinator@.service

    - name: Deploy neo4j
      unarchive:
        src: "neo4j-community-{{ neo4j_version }}-unix.tar.gz"  # or ...-with-apoc.tar.gz
        dest: "/srv/link-data"
        owner: root
        group: root

    - name: Link to deployed version (neo4j)
      file:
        src: "neo4j-community-{{ neo4j_version }}"
        dest: "/srv/link-data/neo4j"
        state: link

    - name: Change configuration values (neo4j)
      blockinfile:
        path: "/srv/link-data/neo4j/conf/neo4j.conf"
        block: "{{ lookup('file', 'neo4j.conf.extra') }}"

    - name: Set staff sudoers rules
      copy:
        src: sudoers.data
        mode: "440"
        dest: /etc/sudoers.d/data

    - name: Set up staff-writable directory default ACL
      acl:
        path: "{{ item }}"
        entity: staff
        etype: group
        default: yes
        permissions: rwX
        recursive: yes
        state: present
      with_items: "{{ wdirs }}"

    - name: Set up staff-writable directory ACL
      acl:
        path: "{{ item }}"
        entity: staff
        etype: group
        permissions: rwX
        recursive: yes
        state: present
      with_items: "{{ wdirs }}"

